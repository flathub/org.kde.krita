From 4bbbe3b388befb858b4c783506ab94f62f099885 Mon Sep 17 00:00:00 2001
From: Fabian Kosmale <fabian.kosmale@qt.io>
Date: Tue, 26 May 2020 16:57:36 +0200
Subject: [PATCH 139/139] Fix -Wdeprecated-copy warnings

Mostly by avoiding custom functions when the compiler generated ones
work just fine

(cherry-picked from commit f28b48b90e3230d1ce6bbcd5031ecb50089ec12b)
Fixes: QTBUG-85998
Change-Id: If8152fd24c9084bd85be3741fc218709e50fc375
Reviewed-by: Fabian Kosmale <fabian.kosmale@qt.io>

(cherry picked from commit ed27157ca9a2c482bcfc79cf1f6f0e496b6a947c)
Signed-off-by: L. E. Segovia <amy@amyspark.me>
---
 src/3rdparty/masm/stubs/wtf/Vector.h      | 1 -
 src/3rdparty/masm/wtf/CheckedArithmetic.h | 3 +++
 src/3rdparty/masm/wtf/PageBlock.h         | 8 --------
 src/qml/jsruntime/qv4scopedvalue_p.h      | 8 +++-----
 src/qml/qml/qqmltypenamecache_p.h         | 6 ------
 5 files changed, 6 insertions(+), 20 deletions(-)

diff --git a/src/3rdparty/masm/stubs/wtf/Vector.h b/src/3rdparty/masm/stubs/wtf/Vector.h
index f4f4dc5c..346a8010 100644
--- a/src/3rdparty/masm/stubs/wtf/Vector.h
+++ b/src/3rdparty/masm/stubs/wtf/Vector.h
@@ -55,7 +55,6 @@ class Vector : public std::vector<T> {
 public:
     Vector() {}
     Vector(int initialSize) : std::vector<T>(initialSize) {}
-    Vector(const Vector &other) : std::vector<T>(other) {}
     Vector(std::initializer_list<T> list) : std::vector<T>(list) {}
 
     inline void append(const T& value)
diff --git a/src/3rdparty/masm/wtf/CheckedArithmetic.h b/src/3rdparty/masm/wtf/CheckedArithmetic.h
index dd4acbb9..7d36ca5c 100644
--- a/src/3rdparty/masm/wtf/CheckedArithmetic.h
+++ b/src/3rdparty/masm/wtf/CheckedArithmetic.h
@@ -430,6 +430,9 @@ public:
     {
     }
 
+    Checked(const Checked &) = default;
+
+
     Checked(ResultOverflowedTag)
         : m_value(0)
     {
diff --git a/src/3rdparty/masm/wtf/PageBlock.h b/src/3rdparty/masm/wtf/PageBlock.h
index 9e2e5610..d85c39cb 100644
--- a/src/3rdparty/masm/wtf/PageBlock.h
+++ b/src/3rdparty/masm/wtf/PageBlock.h
@@ -42,7 +42,6 @@ inline bool isPowerOfTwo(size_t size) { return !(size & (size - 1)); }
 class PageBlock {
 public:
     PageBlock();
-    PageBlock(const PageBlock&);
     PageBlock(void*, size_t, bool hasGuardPages);
     
     void* realBase() const { return m_realBase; }
@@ -74,13 +73,6 @@ inline PageBlock::PageBlock()
 {
 }
 
-inline PageBlock::PageBlock(const PageBlock& other)
-    : m_realBase(other.m_realBase)
-    , m_base(other.m_base)
-    , m_size(other.m_size)
-{
-}
-
 inline PageBlock::PageBlock(void* base, size_t size, bool hasGuardPages)
     : m_realBase(base)
     , m_base(static_cast<char*>(base) + ((base && hasGuardPages) ? pageSize() : 0))
diff --git a/src/qml/jsruntime/qv4scopedvalue_p.h b/src/qml/jsruntime/qv4scopedvalue_p.h
index e4aceef3..12447a86 100644
--- a/src/qml/jsruntime/qv4scopedvalue_p.h
+++ b/src/qml/jsruntime/qv4scopedvalue_p.h
@@ -172,6 +172,9 @@ private:
 
 struct ScopedValue
 {
+    ScopedValue(const ScopedValue &) = default;
+    ScopedValue(ScopedValue &&) = default;
+
     ScopedValue(const Scope &scope)
     {
         ptr = scope.alloc<Scope::Uninitialized>();
@@ -381,11 +384,6 @@ struct Scoped
         return *this;
     }
 
-    Scoped<T> &operator=(const Scoped<T> &other) {
-        *ptr = *other.ptr;
-        return *this;
-    }
-
     Scoped<T> &operator=(T *t) {
         setPointer(t);
         return *this;
diff --git a/src/qml/qml/qqmltypenamecache_p.h b/src/qml/qml/qqmltypenamecache_p.h
index 28b5e7f0..7ec93868 100644
--- a/src/qml/qml/qqmltypenamecache_p.h
+++ b/src/qml/qml/qqmltypenamecache_p.h
@@ -97,7 +97,6 @@ public:
         inline Result(const QQmlImportRef *importNamespace);
         inline Result(const QQmlType &type);
         inline Result(int scriptIndex);
-        inline Result(const Result &);
 
         inline bool isValid() const;
 
@@ -181,11 +180,6 @@ QQmlTypeNameCache::Result::Result(int scriptIndex)
 {
 }
 
-QQmlTypeNameCache::Result::Result(const Result &o)
-: type(o.type), importNamespace(o.importNamespace), scriptIndex(o.scriptIndex)
-{
-}
-
 bool QQmlTypeNameCache::Result::isValid() const
 {
     return type.isValid() || importNamespace || scriptIndex != -1;
-- 
2.37.3

