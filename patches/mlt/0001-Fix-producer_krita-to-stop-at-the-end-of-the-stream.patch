From a820fe65471dcc44b04f877d832658109ef3b388 Mon Sep 17 00:00:00 2001
From: Dmitry Kazakov <dimula73@gmail.com>
Date: Fri, 4 Aug 2023 18:13:20 +0200
Subject: [PATCH] Fix producer_krita to stop at the end of the stream

If limit is explicitly set then we should ignore the end of the audio
stream and just let it keep silence.
---
 src/modules/krita/producer_krita.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/src/modules/krita/producer_krita.c b/src/modules/krita/producer_krita.c
index 92c470ae..ce534511 100644
--- a/src/modules/krita/producer_krita.c
+++ b/src/modules/krita/producer_krita.c
@@ -114,11 +114,15 @@ static void producer_property_changed( mlt_service owner, mlt_producer self, mlt
 	const char *name = mlt_event_data_to_string(event_data);
 	if (!name) return;
 
+	int range_is_changed = 0;
+	int limit_is_changed = 0;
+
 	if (strcmp(name, "start_frame") || strcmp( name, "end_frame" )){
 		private_data* pdata = (private_data*)self->child;
 		mlt_properties props = MLT_PRODUCER_PROPERTIES(self);
 		pdata->frame_start = mlt_properties_get_int(props, "start_frame");
 		pdata->frame_end = mlt_properties_get_int(props, "end_frame");
+		range_is_changed = 1;
 	}
 
 	// TODO: Find out why this strcmp doesn't work...
@@ -126,8 +130,14 @@ static void producer_property_changed( mlt_service owner, mlt_producer self, mlt
 		private_data* pdata = (private_data*)self->child;
 		mlt_properties props = MLT_PRODUCER_PROPERTIES(self);
 		pdata->limit_enabled = mlt_properties_get_int(props, "limit_enabled");
+		limit_is_changed = 1;
 	//}
 
+	if (range_is_changed || limit_is_changed) {
+		const int range_is_set = is_valid_range(pdata) && is_limit_enabled(pdata);
+		mlt_properties_set_string(pdata->producer_internal, "eof", range_is_set ? "continue" : "pause");
+	}
+
 	if (strcmp(name, "speed")) {
 		mlt_properties props = MLT_PRODUCER_PROPERTIES(self);
 		pdata->speed = mlt_properties_get_double(props, "speed");
-- 
2.25.1

